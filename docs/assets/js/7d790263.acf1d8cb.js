"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1341],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2076:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={slug:"decision-tree",title:"Decision Tree Classifier",authors:"aneesh",tags:["ml","classifier","algo","decision-tree"]},o=void 0,l={permalink:"/CyberSec-NGIT/blog/decision-tree",editUrl:"https://github.com/stealthspectre/CyberSec-NGIT/blog/decision-tree.md",source:"@site/blog/decision-tree.md",title:"Decision Tree Classifier",description:"- It is a type of Greedy Algorithm",date:"2023-03-27T18:58:24.486Z",formattedDate:"March 27, 2023",tags:[{label:"ml",permalink:"/CyberSec-NGIT/blog/tags/ml"},{label:"classifier",permalink:"/CyberSec-NGIT/blog/tags/classifier"},{label:"algo",permalink:"/CyberSec-NGIT/blog/tags/algo"},{label:"decision-tree",permalink:"/CyberSec-NGIT/blog/tags/decision-tree"}],readingTime:1.35,hasTruncateMarker:!1,authors:[{name:"Aneesh Sambu",title:"stealthspectre",url:"https://github.com/stealthspectre",imageURL:"https://github.com/stealthspectre.png",key:"aneesh"}],frontMatter:{slug:"decision-tree",title:"Decision Tree Classifier",authors:"aneesh",tags:["ml","classifier","algo","decision-tree"]},prevItem:{title:"What is a Non Parametric Algorithm?",permalink:"/CyberSec-NGIT/blog/non-parametric"},nextItem:{title:"ARP Scan",permalink:"/CyberSec-NGIT/blog/arp-scan"}},s={authorsImageUrls:[void 0]},c=[],p={toc:c},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"It is a type of ",(0,a.kt)("strong",{parentName:"li"},"Greedy Algorithm")),(0,a.kt)("li",{parentName:"ul"},"In this we try to prepare a model by taking a set of features and try to prepare a binary tree where at the end of leaf notes we get a part of one feature only"),(0,a.kt)("li",{parentName:"ul"},"So basically we are classifying the given features with their conditions and dividing them by borders and seperating them"),(0,a.kt)("li",{parentName:"ul"},"example let the set of data be this",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"let our sample feature set be ",(0,a.kt)("img",{parentName:"li",src:"https://i.imgur.com/X2jL7pJ.png",alt:null})),(0,a.kt)("li",{parentName:"ul"},"where red is one type of feature and green is other"),(0,a.kt)("li",{parentName:"ul"},"where x axis denotes $X_0$ and y axis denotes $X_1$"))),(0,a.kt)("li",{parentName:"ul"},"the nodes other than ",(0,a.kt)("strong",{parentName:"li"},"Leaf Nodes")," are called ",(0,a.kt)("strong",{parentName:"li"},"Decision Nodes"),", we can find the required optimal decision for each node using information theory"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("img",{parentName:"li",src:"https://i.imgur.com/MCqpXVY.png",alt:null}),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"this is our decision tree, and leaf nodes consists of the classification"))),(0,a.kt)("li",{parentName:"ul"},"even if we want to add a new entity, we follow the decision nodes starting from top and like binary search tree if go through the tree and place it in its respective position"),(0,a.kt)("li",{parentName:"ul"},"this is known as a greedy algorithm as we are finding the best case for our immediate sub task only, not considering future states prehandedly"),(0,a.kt)("li",{parentName:"ul"},"using ",(0,a.kt)("strong",{parentName:"li"},"Information Theory"),", entropy and all we get optimal decision conditions (cause there can be many we should choose optimal condition) (it comes under ",(0,a.kt)("strong",{parentName:"li"},"Information Gain"),")"),(0,a.kt)("li",{parentName:"ul"},"note: we use object oriented programming for implementing ml algorithms for ease of use and to use it more effectively"),(0,a.kt)("li",{parentName:"ul"},"we use other quantifier for decision nodes along with ",(0,a.kt)("strong",{parentName:"li"},"Entropy")," which is known as ",(0,a.kt)("strong",{parentName:"li"},"Gini Index"))))}u.isMDXComponent=!0}}]);