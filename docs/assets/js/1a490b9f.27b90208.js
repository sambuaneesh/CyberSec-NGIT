"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2599],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>h});var n=a(7294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var p=n.createContext({}),l=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",N={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,o=m(e,["components","mdxType","originalType","parentName"]),c=l(a),u=s,h=c["".concat(p,".").concat(u)]||c[u]||N[u]||r;return a?n.createElement(h,i(i({ref:t},o),{},{components:a})):n.createElement(h,i({ref:t},o))}));function h(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,i=new Array(r);i[0]=u;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m[c]="string"==typeof e?e:s,i[1]=m;for(var l=2;l<r;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5656:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>N,frontMatter:()=>r,metadata:()=>m,toc:()=>l});var n=a(7462),s=(a(7294),a(3905));const r={slug:"decision-tree",title:"Decision Tree Classifier",authors:"aneesh",tags:["ml","classifier","algo","decision-tree"]},i=void 0,m={permalink:"/CyberSec-NGIT/blog/decision-tree",editUrl:"https://github.com/stealthspectre/CyberSec-NGIT/blog/decision-tree.md",source:"@site/blog/decision-tree.md",title:"Decision Tree Classifier",description:"- It is a type of Greedy Algorithm",date:"2023-03-27T18:58:24.486Z",formattedDate:"March 27, 2023",tags:[{label:"ml",permalink:"/CyberSec-NGIT/blog/tags/ml"},{label:"classifier",permalink:"/CyberSec-NGIT/blog/tags/classifier"},{label:"algo",permalink:"/CyberSec-NGIT/blog/tags/algo"},{label:"decision-tree",permalink:"/CyberSec-NGIT/blog/tags/decision-tree"}],readingTime:1.35,hasTruncateMarker:!1,authors:[{name:"Aneesh Sambu",title:"stealthspectre",url:"https://github.com/stealthspectre",imageURL:"https://github.com/stealthspectre.png",key:"aneesh"}],frontMatter:{slug:"decision-tree",title:"Decision Tree Classifier",authors:"aneesh",tags:["ml","classifier","algo","decision-tree"]},prevItem:{title:"What is a Non Parametric Algorithm?",permalink:"/CyberSec-NGIT/blog/non-parametric"},nextItem:{title:"ARP Scan",permalink:"/CyberSec-NGIT/blog/arp-scan"}},p={authorsImageUrls:[void 0]},l=[],o={toc:l},c="wrapper";function N(e){let{components:t,...a}=e;return(0,s.kt)(c,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"It is a type of ",(0,s.kt)("strong",{parentName:"li"},"Greedy Algorithm")),(0,s.kt)("li",{parentName:"ul"},"In this we try to prepare a model by taking a set of features and try to prepare a binary tree where at the end of leaf notes we get a part of one feature only"),(0,s.kt)("li",{parentName:"ul"},"So basically we are classifying the given features with their conditions and dividing them by borders and seperating them"),(0,s.kt)("li",{parentName:"ul"},"example let the set of data be this",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"let our sample feature set be ",(0,s.kt)("img",{parentName:"li",src:"https://i.imgur.com/X2jL7pJ.png",alt:null})),(0,s.kt)("li",{parentName:"ul"},"where red is one type of feature and green is other"),(0,s.kt)("li",{parentName:"ul"},"where x axis denotes ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"X"),(0,s.kt)("mn",{parentName:"msub"},"0"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X_0")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.0785em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"0")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"}))))))))))," and y axis denotes ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"X"),(0,s.kt)("mn",{parentName:"msub"},"1"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X_1")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.0785em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"}))))))))))))),(0,s.kt)("li",{parentName:"ul"},"the nodes other than ",(0,s.kt)("strong",{parentName:"li"},"Leaf Nodes")," are called ",(0,s.kt)("strong",{parentName:"li"},"Decision Nodes"),", we can find the required optimal decision for each node using information theory"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("img",{parentName:"li",src:"https://i.imgur.com/MCqpXVY.png",alt:null}),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"this is our decision tree, and leaf nodes consists of the classification"))),(0,s.kt)("li",{parentName:"ul"},"even if we want to add a new entity, we follow the decision nodes starting from top and like binary search tree if go through the tree and place it in its respective position"),(0,s.kt)("li",{parentName:"ul"},"this is known as a greedy algorithm as we are finding the best case for our immediate sub task only, not considering future states prehandedly"),(0,s.kt)("li",{parentName:"ul"},"using ",(0,s.kt)("strong",{parentName:"li"},"Information Theory"),", entropy and all we get optimal decision conditions (cause there can be many we should choose optimal condition) (it comes under ",(0,s.kt)("strong",{parentName:"li"},"Information Gain"),")"),(0,s.kt)("li",{parentName:"ul"},"note: we use object oriented programming for implementing ml algorithms for ease of use and to use it more effectively"),(0,s.kt)("li",{parentName:"ul"},"we use other quantifier for decision nodes along with ",(0,s.kt)("strong",{parentName:"li"},"Entropy")," which is known as ",(0,s.kt)("strong",{parentName:"li"},"Gini Index"))))}N.isMDXComponent=!0}}]);